@{
    ViewBag.Title = "DispatchReportList";
    Layout = "~/Views/Shared/_SubMain.cshtml";
    List<BusinessObjects.Domain.KeyValueInfo> statuses = BusinessObjects.Manager.LookupManager.GetDispatchDocStatus();
    List<BusinessObjects.Domain.KeyValueInfo> urgency = BusinessObjects.Manager.LookupManager.GetUrgency();
    List<BusinessObjects.Domain.KeyValueInfo> resultStatuses = BusinessObjects.Manager.LookupManager.GetSolutionResultStatus();
    var user = (BusinessObjects.Domain.UserInfo)Session[MedicalEquipmentHostingSystem.Controllers.BaseController.SESSION_KEY_USER];
}        
<div id="dispatchReportVue" v-cloak>
    <table class="filterBtnTable">
        <tr>
            <td width="200px" class="listTitle">作业报告列表</td>
            <td>
                <table cellspacing="0" cellpadding="9">
                    <tr>
                        <td>
                            <button id="0" class="btn btn-sm btnFilter activeFilter" onclick="ChangeStatusQuery(0,this)"><span class="btnContent">全部</span></button><sup class="btnBadge">{{CountNew+CountPending+CountApproved}}</sup>
                        </td>
                        <td>
                            <button class="btn btn-sm btnFilter" onclick="ChangeStatusQuery(@statuses[0].ID,this)"><span class="btnContent">@statuses[0].Name</span></button><sup class="btnBadge">{{CountNew}}</sup>
                        </td>
                        <td>
                            <button class="btn btn-sm btnFilter" onclick="ChangeStatusQuery(@statuses[1].ID,this)"><span class="btnContent">@statuses[1].Name</span></button><sup class="btnBadge">{{CountPending}}</sup>
                        </td>
                        <td>
                            <button class="btn btn-sm btnFilter" onclick="ChangeStatusQuery(@statuses[2].ID,this)"><span class="btnContent">@statuses[2].Name</span></button><sup class="btnBadge">{{CountApproved}}</sup>
                        </td>
                    </tr>
                </table>
            </td>
            <td width="1%">
                <table style="width: 200px;" cellspacing="0" cellpadding="5">
                    <tr>
                        <td>
                            <button class="btn btn-secondary  btn-sm" onclick="PrintBody()">打印</button>
                        </td>
                        <td>
                            <button class="btn btn-secondary  btn-sm" onclick="ExportToExcel()">导出</button>
                        </td>
                        <td>
                            <button class="btn btn-secondary btn-sm" onclick="Refresh()">刷新</button>
                        </td>
                        <td></td>
                    </tr>
                </table>
            </td>
        </tr>
    </table>
    <table class="searchTable" cellpadding="0" cellspacing="0">
        <tr>
            <td>
                <table>
                    <tbody>
                        <tr>
                            <td>
                                审批状态:
                                <select v-model="Filter.Status" v-on:change="QueryDispatchReports()">
                                    <option value="0">全部</option>
                                    @foreach (var temp in statuses)
                                    {
                                        <option value="@temp.ID">@temp.Name</option>
                                    }
                                </select>
                            </td>
                            <td>
                                紧急程度:
                                <select v-model="Filter.Urgency" v-on:change="QueryDispatchReports()">
                                    <option value="0">全部</option>
                                    @foreach (var temp in urgency)
                                    {
                                        <option value="@temp.ID">@temp.Name</option>
                                    }
                                </select>
                            </td>
                            <td>
                                搜索:
                                <select v-model="Filter.FilterField">
                                    <option value="r.ID">作业报告编号</option>
                                    <option value="d.RequestID">请求编号</option>
                                </select>
                                <input type="text" v-model.trim="Filter.FilterText" maxlength="15" onkeydown="DoQuery()" style="width:150px;" />
                                <a href="#"><img src="~/Content/img/search.png" class="icon-sm " onclick="QueryDispatchReports()" /></a>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </td>
        </tr>
    </table>
    <table class="table " cellspacing="0" cellpadding="0">
        <thead class="thead-light">
            <tr>
                <th style="min-width:120px" class="sortColumn" id="r.ID" onclick="SortList(this)">作业报告编号</th>
                <th style="min-width:120px" class="sortColumn" id="d.RequestID" onclick="SortList(this)">请求编号</th>
                <th style="min-width:120px">设备系统编号</th>
                <th style="min-width:200px">设备名称</th>
                <th style="min-width:120px" class="sortColumn" id="d.RequestType" onclick="SortList(this)">派工类型</th>
                <th style="min-width:120px" class="sortColumn" id="d.UrgencyID" onclick="SortList(this)">紧急程度</th>
                <th style="min-width:120px" class="sortColumn" id="d.ScheduleDate" onclick="SortList(this)">派工日期</th>
                <th style="min-width:120px" class="sortColumn" id="d.EndDate" onclick="SortList(this)">结束日期</th>
                <th style="min-width:80px" class="sortColumn" id="r.StatusID" onclick="SortList(this)">状态</th>
                <th style="min-width:80px">操作</th>
            </tr>
        </thead>
        <tbody>
            <tr v-if="DispatchReports.length==0">
                <td colspan="10" align="center">暂无数据</td>
            </tr>
            <tr v-for="dispatchReport in DispatchReports" v-else>
                <td><a href="#" class="linkFile" v-on:click="GoToDispatchReport(dispatchReport.Dispatch.ID,dispatchReport.ID,0,dispatchReport.Dispatch.RequestType.ID)">{{dispatchReport.OID}}</a></td>
                <td>{{dispatchReport.Dispatch.Request.OID}}</td>
                <td>{{dispatchReport.Dispatch.Request.EquipmentOID}}</td>
                <td v-bind:class="dispatchReport.Dispatch.Request.EquipmentID > 0 ? 'linkFile cursor' : ''" v-on:click="btnTimeLine(dispatchReport.Dispatch.Request.EquipmentID)">{{dispatchReport.Dispatch.Request.EquipmentName}}</td>
                <td>{{dispatchReport.Dispatch.RequestType.Name}}</td>
                <td>{{dispatchReport.Dispatch.Urgency.Name}}</td>
                <td>{{parseAndFormatJsonDate(dispatchReport.Dispatch.ScheduleDate)}}</td>
                <td>{{parseAndFormatJsonDate(dispatchReport.Dispatch.EndDate)}}</td>
                <td>{{dispatchReport.Status.Name}}</td>
                <td v-if="@user.Role.ID == @BusinessObjects.Domain.UserRole.SuperAdmin">
                    <button v-show="dispatchReport.Status.ID == @BusinessObjects.Domain.DispatchInfo.DocStatus.Pending" class="btn btn-outline-info btn-sm" v-on:click="GoToDispatchReport(dispatchReport.Dispatch.ID,dispatchReport.ID,0,dispatchReport.Dispatch.RequestType.ID)">
                        作业报告
                    </button>
                </td>
            </tr>
            <tr>
                <td colspan="10">
                    <div class="pagenationDiv">
                        <div id="pager"></div>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</div>
<script>
    var dispatchReportVue = new Vue({
        el: "#dispatchReportVue",
        data: {
            CountCancelled:0,
            CountNew:0,
            CountPending:0,
            CountApproved:0,
            DispatchReports: [],
            Filter: {
                Status: 0,
                Urgency: 0,
                FilterField: "r.ID",
                FilterText: "",
                CurrentPage: 1,
                SortObject: {
                    Field: "r.ID",
                    Direction: true
                }
            }
        }
    })
</script>
<script>
    function ExportToExcel() {
        var json = InitQueryFilter();
        $.fileDownload("@Url.Action("ExportDispatchReports", "DispatchReport")",
        {
            preparingMessageHtml: '开始下载......',
            failMessageHtml: '导出Excel出错，请重试',
            httpMethod: 'POST',
            data: json
        })
    }

    function Refresh() {
        dispatchReportVue.Filter = {
            Status: 0,
            Urgency: 0,
            FilterField: "r.ID",
            FilterText: "",
            CurrentPage: 1,
            SortObject: {
                Field: "r.ID",
                Direction: true
            }
        }
        DisplaySortIcon(dispatchReportVue.Filter.SortObject);
        $(".btnFilter").removeClass("activeFilter");
        $("#0").addClass("activeFilter");
        QueryDispatchReports();
    }
</script>
<script>
    function SortList(item) {
        UpdateSortIcon(item, dispatchReportVue.Filter.SortObject);
        QueryDispatchReports();
    }

    function DoQuery() {
        if (event.keyCode == 13) {
            QueryDispatchReports();
        }
    }

    function PageClick(pageclickednumber) {
        dispatchReportVue.Filter.CurrentPage = pageclickednumber;
        QueryDispatchReports();
    }
</script>
<!-- localStorage -->
<script>
    function InitQueryFilter() {
        var json = {
            currentPage: dispatchReportVue.Filter.CurrentPage,
            status: dispatchReportVue.Filter.Status,
            urgency: dispatchReportVue.Filter.Urgency,
            filterField: dispatchReportVue.Filter.FilterField,
            filterText: dispatchReportVue.Filter.FilterText,
            sortField: dispatchReportVue.Filter.SortObject.Field,
            sortDirection: dispatchReportVue.Filter.SortObject.Direction
        }
        return json;
    }

    function InitFilterParameters() {
        var jsonStr = localStorage.getItem('DispatchReportList_Filter');
        if (jsonStr) {
            var json = JSON.parse(jsonStr);
            dispatchReportVue.Filter.Status = json.status;
            dispatchReportVue.Filter.Urgency = json.urgency;
            dispatchReportVue.Filter.FilterField = json.filterField;
            dispatchReportVue.Filter.FilterText = json.filterText;
            dispatchReportVue.Filter.SortObject.Field = json.sortField;
            dispatchReportVue.Filter.SortObject.Direction = json.sortDirection;
            dispatchReportVue.Filter.CurrentPage = json.currentPage;

            localStorage.removeItem('DispatchReportList_Filter');
        }
    }

    function SaveFilterParameters(json) {
        localStorage.setItem('DispatchReportList_Filter', JSON.stringify(json));
    }

</script>
<script>    
    $(function () {
        InitFilterParameters();
        DisplaySortIcon(dispatchReportVue.Filter.SortObject);
        setTimeout(QueryDispatchReports(), 100);
    })

    function ChangeStatusQuery(statusID,obj) {
        dispatchReportVue.Filter = {
            Status: 0,
            Urgency: 0,
            FilterField: "r.ID",
            FilterText: "",
            CurrentPage: 1,
            SortObject: {
                Field: "r.ID",
                Direction: true
            }
        }
        var temp = $(obj);
        $(".btnFilter").removeClass("activeFilter");
        temp.addClass("activeFilter");
        temp.parent("button").prev().addClass("activeFilter");

        dispatchReportVue.Filter.Status = statusID;
        QueryDispatchReports();
    }

    function GetDispatchReportCount() {
        SetPageWaiting(true);
        $.get('@Url.Action("GetDispatchReportCount", "DispatchReport")', function (response) {
            SetPageWaiting(false);
            if (response.ResultCode != "00") {
                processResponseError(response.ResultCode, response.ResultMessage);
            } else {
                dispatchReportVue.CountNew = response.Data.New;
                dispatchReportVue.CountPending = response.Data.Pending;
                dispatchReportVue.CountApproved = response.Data.Approved;
            }
        });
    }

    function QueryDispatchReports() {
        var json = InitQueryFilter();
        $.get(
            "@Url.Action("QueryDispatchReports", "DispatchReport")", json,
            function (response) {
                if (response.ResultCode != "00") {
                    processResponseError(response.ResultCode, response.ResultMessage);
                } else {
                    dispatchReportVue.DispatchReports = response.Data;
                    dispatchReportVue.Filter.CurrentPage = SetTotalPage4Pager(dispatchReportVue.Filter.CurrentPage, response.TotalPages);
                    GetDispatchReportCount();
                }
            }
        )
    }
    
    function GoToDispatchReport(dispatchID, dispatchReportID, dispatchJournalID, requestType) {
        var json = InitQueryFilter();
        SaveFilterParameters(json);
        window.location.href =
            "@Url.Action("DispatchReportDetail", "DispatchReport")" + "?" + $.param({
                actionName:"@ViewBag.Title",
                dispatchID:dispatchID,
                dispatchReportID:dispatchReportID,
                dispatchJournalID:dispatchJournalID,
                requestType:requestType
        })
    }

    function btnTimeLine(id) {
        if (id > 0) {
            var json = InitQueryFilter();
            SaveFilterParameters(json);
            window.open('@Url.Action("EquipmentTimeLine", "Equipment")' + '?' + $.param({ id: id, actionName: 'EquipmentList' }));
        }
    }
</script>
