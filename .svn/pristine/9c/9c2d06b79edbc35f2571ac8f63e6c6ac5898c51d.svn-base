
@{
    List<BusinessObjects.Domain.DepartmentInfo> Departments = BusinessObjects.Manager.LookupManager.GetDepartments();
    List<BusinessObjects.Domain.KeyValueInfo> SupplierType = BusinessObjects.Manager.LookupManager.GetSupplierType();
    
}

<div id="SelectEquipmentDialog" style="display:none" class="ui-dialog-content ui-widget-content">
    <input type="hidden" id="Equipment" />
    <table class="searchTable" cellpadding="0" cellspacing="0">
        <tr>
            <td>
                <table>
                    <tr>
                        <td>
                            使用科室:
                            <input type="text" id="Department" v-model.trim="Filter.Department.Name" onfocus="autoCompleteDepartments(SelectEquipmentDialogVue.Filter)" maxlength="100" onkeydown="DoSelectEquipmentDialogQuery()" style="width:150px;" />
                        </td>
                        <td>
                        设备名称:
                        <input type="text" maxlength="30" v-model.trim="Filter.Name" onkeydown="DoSelectEquipmentDialogQuery()" style="width:150px;" />
                        </td>
                        <td>
                            设备序列号:
                        <input type="text" maxlength="30" v-model.trim="Filter.SerialCode" onkeydown="DoSelectEquipmentDialogQuery()" style="width:150px;" />
                        </td>
                        <td>
                            搜索:
                            <select v-model="Filter.FilterField">
                                <option value="e.ID">系统编号</option>
                                <option value="e.EquipmentCode">设备型号</option>
                            </select>
                            <input type="text" class="shortInput" v-model.trim="Filter.FilterText" onkeydown="DoSelectEquipmentDialogQuery()" maxlength=" 30" style="width:150px;" /><img src="~/Content/img/search.png" alt="" class="icon-sm cursor" onclick="QueryEquipmentList()" />
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
    </table>
    <table id="EquipmentTbl" class="table table-sm" cellspacing="0" cellpadding="0">
        <thead class="thead-light">
            <tr>
                <th id="e.ID" style="min-width:100px">系统编号</th>
                <th id="e.AssetCode" style="min-width:100px">资产编号</th>
                <th id="e.AssetCode" style="min-width:100px">序列号</th>
                <th style="min-width:100px">设备名称</th>
                <th style="min-width:100px">设备型号</th>
                <th style="min-width:100px;">厂商</th>
                <th style="min-width:70px">资产等级</th>
                <th style="min-width:100px">使用科室</th>
                <th style="min-width:70px">设备状态</th>
                <th style="min-width:70px">维保状态</th>
                <th style="min-width:50px;text-align:center;">选中</th>
            </tr>
        </thead>
        <tbody>
            <tr v-for="equipment in EquipmentList">
                <td>{{equipment.OID}}</td>
                <td>{{equipment.AssetCode}}</td>
                <td>{{equipment.SerialCode}}</td>
                <td style="white-space:normal;word-break:break-all;">{{equipment.Name}}</td>
                <td style="white-space:normal;word-break:break-all;">{{equipment.EquipmentCode}}</td>
                <td style="white-space:normal;word-break:break-all;">{{equipment.Manufacturer.Name}}</td>
                <td style="white-space:normal;word-break:break-all;">{{equipment.AssetLevel.Name}}</td>
                <td style="white-space:normal;word-break:break-all;">{{equipment.Department.Name}}</td>
                <td style="white-space:normal;word-break:break-all;">{{equipment.EquipmentStatus.Name}}</td>
                <td>{{equipment.WarrantyStatus}}</td>
                <td v-if="EquipmentNum == 1" style="text-align:center;"><input type="radio" name="equipmentID" v-bind:value=equipment.ID /></td>
                <td v-else style="text-align:center;"><input type="checkbox" name="equipmentID" v-bind:value=equipment.ID /></td>
            </tr>
            <tr v-if="!EquipmentList.length">
                <td colspan="13" class="tdListCenter">暂无信息</td>
            </tr>
            <tr>
                <td colspan="13">
                    <div class="pagenationDiv" id="pagerDiv">
                        <div id="pager"></div>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<script>
    var SelectEquipmentDialogVue = new Vue({
        el:"#SelectEquipmentDialog",
        data:{
            EquipmentNum:0,
            EquipmentList:[],
            Equipments:[],
            checkval:[],
            Filter:{
                Department: {
                    ID: 0,
                    Name:''
                },
                FujiClass2: {
                    ID: 0,
                    Name: ''
                },
                Name:"",
                SerialCode: '',
                UseStatus:false,
                FilterField:'e.ID',
                FilterText:'',
                CurrentPage: 1,
                PageSize: 10,
                SortObject:{
                    Field:'e.ID',
                    Direction:true
                }
            }
        },
        updated: function () {
            setChecked();
        }
    })
</script>
<script>
    function OpenEquipmentDialog(num, fujiClass2ID) {
        fujiClass2ID = fujiClass2ID || 0;
        SelectEquipmentDialogVue.EquipmentNum = num;
        $("#SelectEquipmentDialog").dialog({ title: "添加设备" });
        $("#SelectEquipmentDialog").dialog("open");
        InitFilter();
        SelectEquipmentDialogVue.Filter.FujiClass2.ID = fujiClass2ID;
        autoCompleteDepartments(SelectEquipmentDialogVue.Filter);
        QueryEquipmentList();
    }
    function InitFilter() {
        SelectEquipmentDialogVue.Filter = {
            Department: {
                ID: 0,
                Name: ''
            },
            FujiClass2: {
                ID: 0,
                Name: ''
            },
            Name: "",
            SerialCode: '',
            UseStatus: false,
            FilterField: 'e.ID',
            FilterText: '',
            CurrentPage: 1,
            PageSize:10,
            SortObject: {
                Field: 'e.ID',
                Direction: true
            }
        }
    }

    function InitSelectEquipmentDialogForm() {
        var dialogEquipment = $("#SelectEquipmentDialog").dialog({
            autoOpen: false,
            height: 680,
            width: 1200,
            modal: true,
            stack: false,
            resizable: false,
            buttons: {
                "确定": function () { SaveEquipments(); },
                "关闭": function () { dialogEquipment.dialog("close"); }
            }
        })
    }
    function DoSelectEquipmentDialogQuery() {
        if (event.keyCode == 13)// Entry event
            QueryEquipmentList();
    }
    function changeCurNum_pager() {
        SelectEquipmentDialogVue.Filter.PageSize = Number($('#SelectEquipmentDialog #curNum option:selected').val());//选中的值
        QueryEquipmentList();
    }
    function QueryEquipmentList() {
        SelectEquipmentDialogVue.Filter.Name = SelectEquipmentDialogVue.Filter.Name.trim();
        SelectEquipmentDialogVue.Filter.SerialCode = SelectEquipmentDialogVue.Filter.SerialCode.trim();
        SelectEquipmentDialogVue.Filter.FilterText = SelectEquipmentDialogVue.Filter.FilterText.trim();
        if (SelectEquipmentDialogVue.Filter.Department.Name == '') SelectEquipmentDialogVue.Filter.Department.ID = -1;
        var jsonData = {
            departmentID: SelectEquipmentDialogVue.Filter.Department.ID,
            fujiClass2ID: SelectEquipmentDialogVue.Filter.FujiClass2.ID,
            filterTextName: SelectEquipmentDialogVue.Filter.Name,
            filterTextSerialCode: SelectEquipmentDialogVue.Filter.SerialCode,
            status: 0,
            warrantyStatus: 0,
            useStatus: false,
            filterField: SelectEquipmentDialogVue.Filter.FilterField,
            filterText: SelectEquipmentDialogVue.Filter.FilterText,
            currentPage: SelectEquipmentDialogVue.Filter.CurrentPage,
            sortField: SelectEquipmentDialogVue.Filter.SortObject.Field,
            sortDirection: SelectEquipmentDialogVue.Filter.SortObject.Direction,
            pageSize: SelectEquipmentDialogVue.Filter.PageSize
        }
        SetPageWaiting(true);
        $.get('@Url.Action("QueryEquipments", "Equipment")',
            jsonData
        , function (response) {
            SetPageWaiting(false);
            if (response.ResultCode != "00") {
                processResponseError(response.ResultCode, response.ResultMessage);
            } else {
                SelectEquipmentDialogVue.EquipmentList = response.Data;
                SelectEquipmentDialogVue.Filter.CurrentPage = SetTotalPage4Pager(SelectEquipmentDialogVue.Filter.CurrentPage, response.TotalPages);
                $("#SelectEquipmentDialog #curNum option[value='" + SelectEquipmentDialogVue.Filter.PageSize + "']").prop("selected", true);
            }
        });
    }

    function GetEquipment4Dialog(id) {
        $.ajax({
            type: "get",
            async: false,
            secureuri: false,
            url: '@Url.Action("GetEquipmentByID", "Equipment")',
            data: {
                id: id,
            },
            dataType: "json",
            success: function (response) {
                if (response.ResultCode != "00") {
                    processResponseError(response.ResultCode, response.ResultMessage);
                } else {
                    if (SelectEquipmentDialogVue.EquipmentNum > 1) {
                        SelectEquipmentDialogVue.Equipments.push(response.Data);
                    }else{
                        SelectEquipmentDialogVue.Equipment = response.Data;
                        SelectEquipmentDialogVue.Equipments = [];
                        SelectEquipmentDialogVue.Equipments.push(response.Data);
                    }
                }
            },
            error:function(){jAlert("连接服务器出错","错误");}
        });
    }

    function AddCheck(objname){
        obj = document.getElementsByName(objname);
        for (var k = 0; k < obj.length; k++){
            if (SelectEquipmentDialogVue.EquipmentNum > 1) {

                if (obj[k].checked && SelectEquipmentDialogVue.checkval.indexOf(parseInt(obj[k].value), 0) == -1)
                {
                    SelectEquipmentDialogVue.checkval.push(parseInt(obj[k].value));
                    GetEquipment4Dialog(obj[k].value)
                }
            }else{
                if(obj[k].checked) {
                    SelectEquipmentDialogVue.checkval = parseInt(obj[k].value);
                    GetEquipment4Dialog(obj[k].value)
                }
            }
        }
        DeleteCheck(objname);
    }

    function DeleteCheck(objname){
        obj = document.getElementsByName(objname);
        for (var k = 0; k < obj.length; k++) {
            if(SelectEquipmentDialogVue.EquipmentNum > 1){
                if (obj[k].checked){}
                else{
                    var index = SelectEquipmentDialogVue.checkval.indexOf(parseInt(obj[k].value), 0);
                    if(index != -1){
                        SelectEquipmentDialogVue.checkval.splice(index,1);
                        SelectEquipmentDialogVue.Equipments.splice(index,1);
                    }
                }
            }
        }
        return SelectEquipmentDialogVue.checkval;
    }

    function setChecked(){
        var boxes = $("#EquipmentTbl input");
        if(boxes.length >0 ){
            for (var i = 0; i < boxes.length; i++) {
                var id = boxes[i].value;
                if (SelectEquipmentDialogVue.EquipmentNum == 1) {
                    if(SelectEquipmentDialogVue.checkval == parseInt(id))
                        boxes[i].checked = true;
                    else
                        boxes[i].checked = false;
                }else{
                    if (SelectEquipmentDialogVue.checkval.indexOf(parseInt(id), 0) != -1)
                        boxes[i].checked = true;
                    else
                        boxes[i].checked = false;
                }
            }
        }

    }

    function PageClick(pageclickednumber) {
        AddCheck('equipmentID')
        SelectEquipmentDialogVue.Filter.CurrentPage = pageclickednumber;
        QueryEquipmentList();
        return SelectEquipmentDialogVue.EquipmentNum == 1?SelectEquipmentDialogVue.Equipments[0]:SelectEquipmentDialogVue.Equipments;
    }

    function CheckSaveSelectEquipment() {
        var Equipments = PageClick(SelectEquipmentDialogVue.Filter.CurrentPage)
        if (SelectEquipmentDialogVue.Equipments.length == 0) {
            jAlert("请至少选择一台设备", "提示")
        } else {
            $("#SelectEquipmentDialog").dialog("close");
        }
        return Equipments;
    }
</script>
