@{
    ViewBag.title = "InvConsumableList";
    Layout = "~/Views/Shared/_SubMain.cshtml";
    BusinessObjects.Domain.UserInfo user = (BusinessObjects.Domain.UserInfo)Session[MedicalEquipmentHostingSystem.Controllers.BaseController.SESSION_KEY_USER];

}

<div id="InvconsumableList" v-cloak>
    <table class="filterBtnTable">
        <tr>
            <td width="200px" class="listTitle">耗材库</td>
            <td width="1%">
                <table style="width: 200px;" cellspacing="0" cellpadding="5">
                    <tr>
                        <td>
                            <button class="btn btn-secondary  btn-sm" onclick="PrintBody()">打印</button>
                        </td>
                        <td>
                            <button class="btn btn-secondary  btn-sm" onclick="ExportToExcel()">导出</button>
                        </td>
                        <td>
                            <button class="btn btn-secondary btn-sm" onclick="Refresh()">刷新</button>
                        </td>
                        <td></td>
                    </tr>
                </table>
            </td>
        </tr>

    </table>
    <table class="searchTable" cellpadding="0" cellspacing="0">
        <tr>
            <td>
                <table>
                    <tbody>
                        <tr>                           
                            <td>
                                搜索:
                                <select v-model="Filter.FilterField">
                                    <option value="c.Name">简称</option>
                                    <option value="c.Description">描述</option>
                                </select>
                                <input type="text" v-model.trim="Filter.FilterText" maxlength="50" onkeydown="DoQuery()" style="width:150px;" />
                                <a href="#"><img src="~/Content/img/search.png" class="icon-sm" onclick="QueryConsumable()" /></a>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </td>
        </tr>
    </table>

    <table class="table" cellpadding="0" cellspacing="0">
            <thead class="thead-light">
                <tr>
                    <th style="min-width:100px;" class="sortColumn" id="ic.ID" onclick="SortConsumables(this)">系统编号</th>
                    <th style="min-width:100px;" class="sortColumn" id="ic.LotNum" onclick="SortConsumables(this)">批次号</th>
                    <th style="min-width:100px;">简称</th>
                    <th style="min-width:100px;">描述</th>
                    <th style="min-width:100px;">供应商</th>
                    <th style="min-width:100px;">富士Ⅱ类</th>   
                    <th style="min-width:80px;">单价(元)</th>
                    <th style="min-width:100px;">购入日期</th>
                    <th style="min-width:100px;">采购单号</th>
                    <th style="min-width:80px;">可用数量</th>
                    <th style="min-width:50px;" class="tdListCenter">编辑</th>
                </tr>
            </thead>
            <tbody>
                <tr v-if="InvConsumableList.length == 0">
                    <td colspan="13" align="center">暂无数据</td>
                </tr>
                <tr v-for="Invconsumble in InvConsumableList" v-else>
                    <td>{{Invconsumble.OID}}</td>
                    <td>{{Invconsumble.LotNum}}</td>
                    <td>{{Invconsumble.Consumable.Name}}</td>
                    <td>{{Invconsumble.Consumable.Description}}</td>                                  
                    <td>{{Invconsumble.Supplier.Name}}</td>
                    <td>{{Invconsumble.Consumable.FujiClass2.Name}}</td>
                    <td>{{Invconsumble.Price}}</td>
                    <td>{{parseAndFormatJsonDate(Invconsumble.PurchaseDate)}}</td>
                    <td>{{Invconsumble.Purchase.ID == 0 ? "" : Invconsumble.Purchase.ID}}</td>
                    <td>{{Invconsumble.AvaibleQty}}</td>
                    <td class="tdListCenter"><img src="~/Content/img/edit.png" class="cursor icon-sm" v-on:click="OpenEditConsumable(Invconsumble.ID)" /></td>
                </tr>
                <tr>
                    <td>
                        <div>
                            <button class="btn btn-info btn-sm" onclick="OpenAddConsumable()"> 新增耗材</button>
                        </div>
                    </td>
                    <td colspan="12">
                        <div class="pagenationDiv">
                            <div id="pagerConsumable"></div>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
</div>

@{ Html.RenderPartial("InvConsumableDialog"); }


<script>
    var InvconsumableVue = new Vue({
        el: "#InvconsumableList",
        data: {
            InvConsumableList: [],
            Filter: {
                StatusID: 1,
                FilterField: "c.Name",
                FilterText: "",
                CurrentPage: 1,
                SortObject:{Field:"ic.ID", Direction:true}
            }
        }
    })
</script>
<script>
    function InitQueryFilter() {
        var json = {
            currentPage: InvconsumableVue.Filter.CurrentPage,
            statusID: InvconsumableVue.Filter.StatusID,
            filterField: InvconsumableVue.Filter.FilterField,
            filterText: InvconsumableVue.Filter.FilterText,
            sortField: InvconsumableVue.Filter.SortObject.Field,
            sortDirection: InvconsumableVue.Filter.SortObject.Direction
        }
        return json;
    }
    //导出
    function ExportToExcel() {
        var json = InitQueryFilter();
        $.fileDownload("@Url.Action("ExportConsumables", "InvConsumable")",
    {
        preparingMessageHtml: '开始下载......',
        failMessageHtml: '导出Excel出错，请重试',
        httpMethod: 'POST',
        data: json
    })
    }

    //刷新
    function Refresh() {
        InvconsumableVue.Filter = {
            StatusID: 1,
            FilterField: "c.Name",
            FilterText: "",
            CurrentPage: 1,
            SortObject:{Field:"ic.ID", Direction:true}
    }
        DisplaySortIcon(InvconsumableVue.Filter.SortObject);
        $(".btnFilter").removeClass("activeFilter");
        $("#0").addClass("activeFilter");
        QueryConsumable();
    }

</script>
<script>
    //回车搜索
    function DoQuery() {
        if (event.keyCode == 13) {
            QueryConsumable();
        }
    }
    //点击页码
    function PageClickConsumable(pageclickednumber) {
        InvconsumableVue.Filter.CurrentPage = pageclickednumber;
        QueryConsumable();
    }
</script>
<script>
    //进入页面需要执行的操作
    $().ready(function () {
        InitDate();
        InitInvConsumableDialog();
        setTimeout(QueryConsumable(), 100);
    })
    function InitDate() {
        var dateFields = $([]).add($("#PurchaseDate"));
        dateFields.datepicker({
            changeMonth: true,
            changeYear: true
        })
        dateFields.datepicker("option", "dateFormat", "yy-mm-dd");
    }
    //获取耗材列表信息
    function QueryConsumable() {
        var json = InitQueryFilter();
        SetPageWaiting(true);
        $.get('@Url.Action("QueryConsumableList", "InvConsumable")', json,
            function (response) {
                SetPageWaiting(false);
                if (response.ResultCode != "00")
                    processResponseError(response.ResultCode, response.ResultMessage);
                else {
                    InvconsumableVue.InvConsumableList = response.Data;
                    InvconsumableVue.Filter.CurrentPage = SetTotalPage4Pager(InvconsumableVue.Filter.CurrentPage, response.TotalPages, "pagerConsumable", PageClickConsumable);
                }
            })
    }
</script>

<!--排序-->
<script>
    function SortConsumables(item) {
        UpdateSortIcon(item, InvconsumableVue.Filter.SortObject);
        QueryConsumable();
    }
</script>
 