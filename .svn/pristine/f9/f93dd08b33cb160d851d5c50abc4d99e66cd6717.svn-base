using BusinessObjects.Aspect;
using BusinessObjects.DataAccess;
using BusinessObjects.Domain;
using BusinessObjects.Util;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace BusinessObjects.Manager
{
    /// <summary>
    /// 采购单manager
    /// </summary>
    [LoggingAspect(AspectPriority = 1)]
    public class PurchaseOrderManager
    {
        private PurchaseOrderDao purchaseOrderDao = new PurchaseOrderDao();

        /// <summary>
        /// 保存采购单信息
        /// </summary>
        /// <param name="info">采购单信息</param>
        /// <param name="userInfo">用户信息</param>
        /// <returns>采购单id</returns>
        [TransactionAspect]
        public int SavePurchaseOrder(PurchaseOrderInfo info, UserInfo userInfo)
        {
            if (info.ID == 0)
            {
                info.ID = this.purchaseOrderDao.AddPurchaseOrder(info);
            }
            else
            {
                this.purchaseOrderDao.UpdatePurchaseOrder(info);

                this.purchaseOrderDao.DeleteComponent(info.ID);
                this.purchaseOrderDao.DeleteConsumable(info.ID);
                this.purchaseOrderDao.DeleteService(info.ID);
            }

            if (info.Components != null)
            {
                foreach (InvComponentInfo component in info.Components)
                {
                    this.purchaseOrderDao.AddComponent(info.ID, component);
                }
            }
            if (info.Consumables != null)
            {
                foreach (InvConsumableInfo consumable in info.Consumables)
                {
                    this.purchaseOrderDao.AddConsumable(info.ID, consumable);
                }
            }
            if (info.Services != null)
            {
                foreach (InvServiceInfo service in info.Services)
                {
                    this.purchaseOrderDao.AddService(info.ID, service);
                }
            }

            return info.ID;
        }

        public PurchaseOrderInfo GetPurchaseOrderByID(int purchaseOrderID)
        {
            PurchaseOrderInfo info = this.purchaseOrderDao.GetPurchaseOrderByID(purchaseOrderID);

            List<InvComponentInfo> components = this.purchaseOrderDao.GetComponents(purchaseOrderID);
            foreach (InvComponentInfo component in components)
            {
                for(int i = 0; i < component.Qty;i++)
                {
                    info.Components.Add(component);
                }
            }
            List<InvConsumableInfo> consumables = this.purchaseOrderDao.GetConsumables(purchaseOrderID);
            foreach (InvConsumableInfo consumable in consumables)
            {
                for (int i = 0; i < consumable.Qty; i++)
                {
                    info.Consumables.Add(consumable);
                }
            }
            info.Services = this.purchaseOrderDao.GetServices(purchaseOrderID);

            return info;
        }

    }
}
